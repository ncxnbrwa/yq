package cn.iimedia.yq.HomeNewsList;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.design.widget.CoordinatorLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.EmptyUtils;
import com.blankj.utilcode.util.ToastUtils;
import com.example.zhouwei.library.CustomPopWindow;
import com.github.jdsjlzx.interfaces.OnLoadMoreListener;
import com.github.jdsjlzx.interfaces.OnRefreshListener;
import com.github.jdsjlzx.recyclerview.LRecyclerView;
import com.github.jdsjlzx.recyclerview.LRecyclerViewAdapter;
import com.qmuiteam.qmui.widget.QMUIEmptyView;

import org.litepal.crud.DataSupport;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import butterknife.BindView;
import butterknife.OnClick;
import cn.iimedia.yq.Base.BaseFragment;
import cn.iimedia.yq.Base.YqApplication;
import cn.iimedia.yq.Base.utils.DLog;
import cn.iimedia.yq.Base.utils.TimeTypeUtils;
import cn.iimedia.yq.HomeNewsList.adapter.NewsListAdapter;
import cn.iimedia.yq.R;
import cn.iimedia.yq.http.APIConstants;
import cn.iimedia.yq.http.RequestEngine;
import cn.iimedia.yq.http.bean.DatabaseBean.ProjectDatabase;
import cn.iimedia.yq.http.bean.ResponseBean.NewsBean;
import cn.iimedia.yq.http.bean.ResponseBean.NewsListBean;
import cn.iimedia.yq.http.bean.ResponseBean.ProjectBean;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 * Created by iiMedia on 2017/12/11.
 * 主页舆情页面
 */

public class FragmentNews extends BaseFragment implements OnRefreshListener, OnLoadMoreListener {
    public static final String TAG = "FragmentNews";

    @BindView(R.id.root_view)
    CoordinatorLayout mRootView;
    @BindView(R.id.news_toolbar)
    Toolbar toolbar;
    @BindView(R.id.tv_head_right)
    TextView tvRightTime;
    @BindView(R.id.tv_plat)
    TextView tvPlat;
    @BindView(R.id.tv_emotion)
    TextView tvEmotion;
    @BindView(R.id.btn_confirm)
    Button btnConfirm;
    @BindView(R.id.rv_newsList)
    LRecyclerView rvNewsList;
    @BindView(R.id.news_empty_view)
    QMUIEmptyView mEmptyView;

    CustomPopWindow timeChooseWindow, platChooseWindow, emotionChooseWindow;
    APIConstants apiConstants = null;
    //数据集合
    List<NewsListBean> newsList = null;
    NewsListAdapter newsListAdapter = null;
    LRecyclerViewAdapter lRecyclerViewAdapter = null;

    int platType = 1, emoType = 0, taskId = 0;

    public static FragmentNews getInstance() {
        FragmentNews fragmentNews = new FragmentNews();
        return fragmentNews;
    }

    @Override
    protected int getLayoutId() {
        return R.layout.fragment_news;
    }

    @Override
    protected void init() {
        toolbar.setTitle("舆情");
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ActivityUtils.startActivity(getBaseActivity(), ProjectManagerActivity.class);
            }
        });
        rvNewsList.setLayoutManager(new LinearLayoutManager(getBaseActivity()));
        rvNewsList.setOnRefreshListener(this);
        rvNewsList.setOnLoadMoreListener(this);
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        if (apiConstants == null) {
            apiConstants = RequestEngine.createService(APIConstants.class);
        }
        loadData();
    }

    @Override
    public void onRefresh() {
        getNewsData(taskId, platType, emoType);
        rvNewsList.refreshComplete(6);
    }

    @Override
    public void onLoadMore() {
        loadMore();
    }

    private void loadData() {
        mEmptyView.show(true);
        //先保存拥有项目到数据库
        Call<ProjectBean> projectCall = apiConstants.getCurrentProject(System.currentTimeMillis(), "desc");
        projectCall.enqueue(new Callback<ProjectBean>() {
            @Override
            public void onResponse(Call<ProjectBean> call, Response<ProjectBean> response) {
                if (EmptyUtils.isNotEmpty(response.body())) {
                    ProjectBean bean = response.body();
                    DLog.w(TAG, bean.toString());
                    if (bean.getRecords() != null) {
                        DataSupport.deleteAll(ProjectDatabase.class);
                        List<ProjectBean.RecordsBean> recordsList = bean.getRecords();
                        for (int i = 0; i < recordsList.size(); i++) {
                            //项目存入数据库
                            ProjectBean.RecordsBean recordsBean = recordsList.get(i);
                            ProjectDatabase projectDatabase = new ProjectDatabase();
                            projectDatabase.setProject_id(recordsBean.getProject_id());
                            projectDatabase.setProjectname(recordsBean.getProjectname());
                            projectDatabase.setKeywords(recordsBean.getKeywords());
                            projectDatabase.setModel(recordsBean.getModel());
                            projectDatabase.setRelated_keywords(recordsBean.getRelated_keywords());
                            projectDatabase.setProject_keyword(recordsBean.getProject_keyword());
                            projectDatabase.save();
                        }
                        DLog.w(TAG, "数据库保存数据:" + DataSupport.findAll(ProjectDatabase.class));
                        getNewsData(taskId, platType, emoType);
                    }
                }
            }

            @Override
            public void onFailure(Call<ProjectBean> call, Throwable t) {
                mEmptyView.hide();
                ToastUtils.showShort("项目获取失败");
                DLog.w(TAG, "项目获取失败信息:" + t.getMessage());
            }
        });

    }

    private void getNewsData(int taskId, int type, int emoType) {
        Map<String, Object> newsMap = new HashMap<>();
        newsMap.put("pagestart", System.currentTimeMillis() / 1000);  //开始时间,传当前时间戳
        newsMap.put("pagesize", 6);  //每页显示新闻条数,默认6
        if (taskId == 0) {
            newsMap.put("task_id", DataSupport.findAll(ProjectDatabase.class).get(0).getProject_id());  //项目ID
        } else {
            newsMap.put("task_id", taskId);
        }
        newsMap.put("start", TimeTypeUtils.get24HourBeforeTimestamp() / 1000);  //分页开始时间,开始时间戳
        newsMap.put("end", System.currentTimeMillis() / 1000);  //分页结束时间,结束时间戳
        newsMap.put("type", type);  //媒体类型,网页-1微信-2 微博-3 APP-4 论坛-5 报刊-6 视频-7
        newsMap.put("emo_type", emoType);  //情绪,正面-1中立-0 负面-2
        newsMap.put("sign", "");  //标识号,用来标识有效用户
        newsMap.put("search_type", "");  //搜索类型,标题-0 全文-1 来源-2 作者-3
        newsMap.put("skey", "");  //搜索词
        //参数拼成字符串传入
        String param = "";
        for (Map.Entry<String, Object> entry : newsMap.entrySet()) {
            param += entry.getKey() + "=" + entry.getValue() + "&";
        }

        Call<NewsBean> newsCall = apiConstants.getNews(param);
        newsCall.enqueue(new Callback<NewsBean>() {
            @Override
            public void onResponse(Call<NewsBean> call, Response<NewsBean> response) {
                if (EmptyUtils.isNotEmpty(response.body())) {
                    NewsBean newsBean = response.body();
                    if (newsBean.getCode() == 0) {
                        if (newsList == null) {
                            newsList = new ArrayList<>();
                        }
                        if (newsBean.getData() != null) {
                            if (EmptyUtils.isNotEmpty(newsBean.getData().getList())) {
                                List<NewsListBean> list = newsBean.getData().getList();
                                newsList.addAll(list);
                                removeRepetition(newsList);
                                initAdapter();
                            }
                        }
                    }
                }
                mEmptyView.hide();
            }

            @Override
            public void onFailure(Call<NewsBean> call, Throwable t) {
                mEmptyView.hide();
                ToastUtils.showShort("数据获取失败");
                DLog.w(TAG, "数据获取失败信息:" + t.getMessage());
            }
        });
    }

    //去重
    private void removeRepetition(List<NewsListBean> list) {
        for (int i = 0; i < list.size() - 1; i++) {
            for (int j = list.size() - 1; j > i; j--) {
                if (list.get(j).getNews_id().equals(list.get(i).getNews_id())) {
                    list.remove(j);
                }
            }
        }
    }

    private void loadMore() {
//        getNewsData();
    }

    private void initAdapter() {
        if (newsListAdapter == null) {
            newsListAdapter = new NewsListAdapter(newsList, getBaseActivity());
        } else {
            newsListAdapter.notifyDataSetChanged();
        }
        if (lRecyclerViewAdapter == null) {
            lRecyclerViewAdapter = new LRecyclerViewAdapter(newsListAdapter);
            rvNewsList.setAdapter(lRecyclerViewAdapter);
        } else {
            lRecyclerViewAdapter.notifyDataSetChanged();
        }
    }

    @OnClick({R.id.tv_head_right, R.id.tv_plat, R.id.tv_emotion, R.id.btn_confirm})
    public void otherClick(View v) {
        switch (v.getId()) {
            case R.id.tv_head_right:
                View headRightView = LayoutInflater.from(getBaseActivity())
                        .inflate(R.layout.popwindow_home_head_time, mRootView, false);
                handleHeadRightViewClick(headRightView);
                if (timeChooseWindow == null) {
                    timeChooseWindow = new CustomPopWindow.PopupWindowBuilder(YqApplication.getAppContext())
                            .setView(headRightView)
                            .setOutsideTouchable(true)
                            .setFocusable(true)
                            .create()
                            .showAsDropDown(toolbar, toolbar.getWidth() - tvRightTime.getWidth() - 5, 0);
                } else {
                    timeChooseWindow.showAsDropDown(toolbar, toolbar.getWidth() - tvRightTime.getWidth() - 5, 0);
                }
                break;
            case R.id.tv_plat:
                View platChooseView = LayoutInflater.from(getBaseActivity())
                        .inflate(R.layout.popwindow_home_plat, mRootView, false);
                handlePlatChooseViewClick(platChooseView);
                if (platChooseWindow == null) {
                    platChooseWindow = new CustomPopWindow.PopupWindowBuilder(YqApplication.getAppContext())
                            .setView(platChooseView)
                            .setFocusable(true)
                            .setOutsideTouchable(true)
                            .create()
                            .showAsDropDown(tvPlat);
                } else {
                    platChooseWindow.showAsDropDown(tvPlat);
                }
                break;
            case R.id.tv_emotion:
                View emotionChoosView = LayoutInflater.from(getBaseActivity())
                        .inflate(R.layout.popwindow_home_emotion, mRootView, false);
                handleEmotionChooseViewClick(emotionChoosView);
                if (emotionChooseWindow == null) {
                    emotionChooseWindow = new CustomPopWindow.PopupWindowBuilder(YqApplication.getAppContext())
                            .setView(emotionChoosView)
                            .setFocusable(true)
                            .setOutsideTouchable(true)
                            .create()
                            .showAsDropDown(tvEmotion);
                } else {
                    emotionChooseWindow.showAsDropDown(tvEmotion);
                }
                break;
            case R.id.btn_confirm:
                break;
        }
    }

    //时间选择弹窗的点击事件
    private void handleHeadRightViewClick(View contentView) {
        View.OnClickListener clickListener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (EmptyUtils.isNotEmpty(timeChooseWindow)) {
                    timeChooseWindow.dissmiss();
                }
                switch (v.getId()) {
                    case R.id.tv_24H:
                        tvRightTime.setText("24H");
                        break;
                    case R.id.tv_yesterday:
                        tvRightTime.setText("昨天");
                        break;
                    case R.id.tv_aweek:
                        tvRightTime.setText("一周");
                        break;
                    case R.id.tv_amonth:
                        tvRightTime.setText("30天");
                        break;
                }
            }
        };
        contentView.findViewById(R.id.tv_24H).setOnClickListener(clickListener);
        contentView.findViewById(R.id.tv_yesterday).setOnClickListener(clickListener);
        contentView.findViewById(R.id.tv_aweek).setOnClickListener(clickListener);
        contentView.findViewById(R.id.tv_amonth).setOnClickListener(clickListener);
    }

    //平台选择弹窗的点击处理
    private void handlePlatChooseViewClick(View contentView) {
        View.OnClickListener listener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (EmptyUtils.isNotEmpty(platChooseWindow)) {
                    platChooseWindow.dissmiss();
                }
                switch (v.getId()) {
//                    case R.id.tv_plat_all:
//                        tvPlat.setText("全部平台");
//                        break;
                    case R.id.tv_plat_web:
                        tvPlat.setText("网页");
                        platType = 1;
                        break;
                    case R.id.tv_plat_wechat:
                        tvPlat.setText("微信");
                        platType = 2;
                        break;
                    case R.id.tv_plat_weibo:
                        tvPlat.setText("微博");
                        platType = 3;
                        break;
                    case R.id.tv_plat_app:
                        tvPlat.setText("APP");
                        platType = 4;
                        break;
                    case R.id.tv_plat_forum:
                        tvPlat.setText("论坛");
                        platType = 5;
                        break;
                    case R.id.tv_plat_newspaper:
                        tvPlat.setText("报刊");
                        platType = 6;
                        break;
                    case R.id.tv_plat_video:
                        tvPlat.setText("视频");
                        platType = 7;
                        break;
                }
            }
        };
//        contentView.findViewById(R.id.tv_plat_all).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_web).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_wechat).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_weibo).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_app).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_forum).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_newspaper).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_plat_video).setOnClickListener(listener);
    }

    private void handleEmotionChooseViewClick(View contentView) {
        View.OnClickListener listener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (EmptyUtils.isNotEmpty(emotionChooseWindow)) {
                    emotionChooseWindow.dissmiss();
                }
                switch (v.getId()) {
//                    case R.id.tv_emotion_all:
//                        tvEmotion.setText("全部情感");
//                        break;
                    case R.id.tv_emotion_positive:
                        tvEmotion.setText("正面");
                        emoType = 1;
                        break;
                    case R.id.tv_emotion_negative:
                        tvEmotion.setText("负面");
                        emoType = 2;
                        break;
                    case R.id.tv_emotion_neutral:
                        tvEmotion.setText("中立");
                        emoType = 0;
                        break;
                }
            }
        };
//        contentView.findViewById(R.id.tv_emotion_all).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_emotion_positive).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_emotion_negative).setOnClickListener(listener);
        contentView.findViewById(R.id.tv_emotion_neutral).setOnClickListener(listener);
    }
}
