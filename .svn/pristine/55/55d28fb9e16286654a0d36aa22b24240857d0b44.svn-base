package cn.iimedia.yq.HomeNewsList;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.Toolbar;
import android.view.View;

import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.EmptyUtils;
import com.github.jdsjlzx.interfaces.OnItemClickListener;
import com.github.jdsjlzx.interfaces.OnRefreshListener;
import com.github.jdsjlzx.recyclerview.LRecyclerView;
import com.github.jdsjlzx.recyclerview.LRecyclerViewAdapter;
import com.qmuiteam.qmui.widget.QMUIEmptyView;

import org.litepal.crud.DataSupport;
import org.litepal.crud.callback.FindMultiCallback;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.OnClick;
import cn.iimedia.yq.AddProjectActivity;
import cn.iimedia.yq.Base.BaseActivity;
import cn.iimedia.yq.Base.utils.DLog;
import cn.iimedia.yq.Base.utils.ELS;
import cn.iimedia.yq.HomeNewsList.adapter.ProjectAdapter;
import cn.iimedia.yq.R;
import cn.iimedia.yq.http.APIConstants;
import cn.iimedia.yq.http.RequestEngine;
import cn.iimedia.yq.http.bean.DatabaseBean.ProjectDatabase;

public class ProjectManagerActivity extends BaseActivity implements OnRefreshListener {
    public static final String TAG = "ProjectManagerActivity";

    @BindView(R.id.project_manager_toolbar)
    Toolbar toolbar;
    @BindView(R.id.rv_project_list)
    LRecyclerView rvProjectList;
    @BindView(R.id.empty_view)
    QMUIEmptyView mEmptyView;
    @BindView(R.id.fab_add_project)
    FloatingActionButton btnAddProject;

    APIConstants apiConstants = null;
    ProjectAdapter projectAdapter = null;
    LRecyclerViewAdapter lRecyclerViewAdapter = null;
    List<ProjectDatabase> databasesList = null;
    ELS els;
    //设置加载数据,刷新完使用
//    int projectCount = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        apiConstants = RequestEngine.createService(APIConstants.class);
        els = ELS.getInstance(this);
//        projectCount = DataSupport.findAll(ProjectDatabase.class).size();
        toolbar.setTitle(els.getStringData(ELS.CURRENT_TASK_NAME));
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
        rvProjectList.setOnRefreshListener(this);
        rvProjectList.setLayoutManager(new LinearLayoutManager(this));
        loadData();
        lRecyclerViewAdapter.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(View view, int position) {
                ProjectDatabase projectDatabase = databasesList.get(position);
                els.saveIntData(ELS.CURRENT_TASK_ID, projectDatabase.getProject_id());
                els.saveStringData(ELS.CURRENT_TASK_NAME, projectDatabase.getProjectname());
                Intent intent = new Intent();
                intent.setAction(FragmentNews.CHOOSE_PROJECT_ACTION);
                sendBroadcast(intent);
                finish();
            }
        });
    }

    @Override
    protected int getLayoutId() {
        return R.layout.activity_project_manager;
    }

    private void loadData() {
        mEmptyView.show(true);
        if (databasesList == null) {
            databasesList = new ArrayList<>();
        }
        //从数据库拿到数据
        DataSupport.findAllAsync(ProjectDatabase.class).listen(new FindMultiCallback() {
            @Override
            public <T> void onFinish(List<T> t) {
                List<ProjectDatabase> list = (List<ProjectDatabase>) t;
                if (EmptyUtils.isNotEmpty(list)) {
                    databasesList.addAll(list);
                    DLog.w(TAG, "项目列表:" + databasesList.toString());
                }
            }
        });

        initAdapter();
        //禁止上拉加载
        rvProjectList.setLoadMoreEnabled(false);
        mEmptyView.hide();
        rvProjectList.refreshComplete(databasesList.size());
    }

    private void initAdapter() {
        if (projectAdapter == null) {
            projectAdapter = new ProjectAdapter(databasesList, this);
        } else {
            projectAdapter.notifyDataSetChanged();
        }
        if (lRecyclerViewAdapter == null) {
            lRecyclerViewAdapter = new LRecyclerViewAdapter(projectAdapter);
        } else {
            lRecyclerViewAdapter.notifyDataSetChanged();
        }
        rvProjectList.setAdapter(lRecyclerViewAdapter);
    }

    @Override
    public void onRefresh() {
        databasesList.clear();
        lRecyclerViewAdapter.notifyDataSetChanged();
        loadData();
    }

    @OnClick(R.id.fab_add_project)
    public void addClick(View view) {
        ActivityUtils.startActivity(this, AddProjectActivity.class);
    }
}
