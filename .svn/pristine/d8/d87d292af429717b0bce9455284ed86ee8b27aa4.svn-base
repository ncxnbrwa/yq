package cn.iimedia.yq;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import com.blankj.utilcode.util.ActivityUtils;
import com.blankj.utilcode.util.EmptyUtils;
import com.blankj.utilcode.util.RegexUtils;
import com.blankj.utilcode.util.ToastUtils;
import com.qmuiteam.qmui.widget.dialog.QMUITipDialog;

import butterknife.BindView;
import butterknife.OnClick;
import cn.iimedia.yq.Base.BaseActivity;
import cn.iimedia.yq.Base.YqApplication;
import cn.iimedia.yq.Base.utils.ComponentsUtils;
import cn.iimedia.yq.Base.utils.DLog;
import cn.iimedia.yq.Base.utils.ELS;
import cn.iimedia.yq.http.APIConstants;
import cn.iimedia.yq.http.CookiesAddInterceptor;
import cn.iimedia.yq.http.CookiesReceiverInterceptor;
import cn.iimedia.yq.http.RequestEngine;
import cn.iimedia.yq.http.bean.ResponseBean.User;
import okhttp3.OkHttpClient;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

/**
 * Created by iiMedia on 2017/11/9.
 * 登录界面
 */

public class LoginActivity extends BaseActivity {
    public static final String TAG = "LoginActivity";
    ELS els;

    @BindView(R.id.et_phone)
    EditText etPhone;
    @BindView(R.id.et_password)
    EditText etPassword;
    @BindView(R.id.btn_login)
    Button btnLogin;
    APIConstants apiConstants = null;
    QMUITipDialog loadingDialog;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_login;
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        els = ELS.getInstance(YqApplication.getAppContext());
        loadingDialog = ComponentsUtils.getLoadingDialog(this, "正在登录");

        OkHttpClient okHttpClient = new OkHttpClient.Builder()
                .addInterceptor(RequestEngine.getHttpLoggingInterceptor())
                .addInterceptor(new CookiesReceiverInterceptor())
                .addInterceptor(new CookiesAddInterceptor())
                .build();
        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl(RequestEngine.HOST)
                .addConverterFactory(GsonConverterFactory.create())
                .client(okHttpClient)
                .build();

        apiConstants = retrofit.create(APIConstants.class);
//        apiConstants = RequestEngine.createService(APIConstants.class);

//        etPhone.setText("15911112121");
//        etPassword.setText("111111");
        etPhone.setText("15913110374");
        etPassword.setText("222222");
    }

    @OnClick(R.id.btn_login)
    public void onClick(View view) {
        String phoneStr = etPhone.getText().toString();
        String passStr = etPassword.getText().toString();
        if (!TextUtils.isEmpty(phoneStr)) {
            if (RegexUtils.isMobileExact(phoneStr)) {
                if (!TextUtils.isEmpty(passStr)) {

                } else {
                    ToastUtils.showShort("密码不能为空");
                    return;
                }
            } else {
                ToastUtils.showShort("请输入正确的手机号码");
                return;
            }
        } else {
            ToastUtils.showShort("手机号不能为空");
            return;
        }

//        ActivityUtils.startActivity(LoginActivity.this, MainActivity.class);
//        finish();
        //登录接口
        Call<User> loginCall = apiConstants.login(phoneStr, passStr);
        loadingDialog.show();
        loginCall.enqueue(new Callback<User>() {
            @Override
            public void onResponse(Call<User> call, Response<User> response) {
                if (EmptyUtils.isNotEmpty(response.body())) {
                    User user = response.body();
                    if (user.getLogin_error() == 0) {
                        ToastUtils.showShort("登录成功");
                        ActivityUtils.startActivity(LoginActivity.this, MainActivity.class);
                        finish();
                    } else if (user.getLogin_error() == 2) {
                        ToastUtils.showShort("用户账号已过期");
                    } else {
                        ToastUtils.showShort("用户账号或密码错误");
                    }
                }
                loadingDialog.dismiss();
            }

            @Override
            public void onFailure(Call<User> call, Throwable t) {
                loadingDialog.dismiss();
                DLog.w(TAG, "登录失败信息:" + t.getMessage());
                ToastUtils.showShort("登录失败");
            }
        });
    }


    @Override
    protected void onDestroy() {
        super.onDestroy();
    }
}
